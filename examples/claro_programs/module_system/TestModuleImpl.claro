
newtype OpaqueList<T> : mut [T]
newtype ImmutableList<T> : [T]


# For any module exported static value, Claro validates that the the module's sources exports a provider function named
# `static_<static value name>()` that returns the declared type of the static value.
provider static_PI() -> float {
  print("...computing PI...");
  print("......checking TEST_FLAG......: <{TEST_FLAG}>");
  return 3.14;
}
provider static_SOME_LAZY_STATIC_VAL() -> string {
  print("...computing SOME_LAZY_STATIC_VAL...");
  return "THIS VALUE WAS COMPUTED LAZILY";
}

function intIdentity(i: int) -> int {
  return i;
}

function add(lhs: int, rhs: int) -> int {
  print("TESTING!!! HERE'S THE STATIC VALUE `PI`: {PI}");
  return lhs + rhs;
}


function immutableListOf<T>(elems: [T]) -> ImmutableList<T> {
  return ImmutableList(elems);
}
function immutableListHead<T>(list: ImmutableList<T>) -> T {
  return unwrap(list)[0];
}

print("Just validate that this works.");