load("//:rules.bzl", "claro_module", "claro_binary")
load("//mdbook_docs:docs_with_validated_examples.bzl", "doc_with_validated_examples")

exports_files(["ex-server-config.json"])

doc_with_validated_examples(
    name = "static_values",
    doc_template = "static_values.tmpl.md",
    examples = [
        {
            "example": "ex1.claro_module_api",
            "executable": False,
            "codeblock_css_class": "claro",
        },
        {
            "example": "ex-server-config.json",
            "executable": False,
            "codeblock_css_class": "js",
        },
        {
            "example": "ex1-impl.claro",
            # Marking executable just so that docs_with_validated_examples() will auto-remove the leading `$$`...
            "executable": True,
            "expect_errors": True,
            "append_output": False,
        },
        {
            "example": "ex1-test.claro",
            "deps": {"Config": ":server_config"},
        },
        {
            "example": "ex1-impl-with-print.claro",
            # Marking executable just so that docs_with_validated_examples() will auto-remove the leading `$$`...
            "executable": True,
            "expect_errors": True,
            "append_output": False,
        },
        {
            "example": "ex1-test-with-print.claro",
            "deps": {"Config": ":server_config_with_print"},
        },
        {
            "example": "ex1-lazy.claro_module_api",
            "executable": False,
            "codeblock_css_class": "claro",
        },
        {
            "example": "ex1-test-with-print.claro",
            "deps": {"Config": ":server_lazy_config_with_print"},
        },
    ],
)

claro_module(
    name = "server_config",
    module_api_file = "ex1.claro_module_api",
    # Generated by docs_with_validated_examples() above.
    srcs = [":static_values_EX3_main.claro"],
    resources = {"ConfigJSON": "ex-server-config.json"},
)

claro_binary(
    name = "test",
    main_file = "ex1-test.claro",
    deps = {"Config": ":server_config"},
)

genrule(
    name = "lazy_variant",
    outs = ["ex1-lazy.claro_module_api"],
    srcs = ["lazy.claro_module_api"],
    cmd = "sed 's/^/$$$$/' $(location lazy.claro_module_api) | sed 's/^\\$$\\$$lazy/lazy/' > $(OUTS)",
)

genrule(
    name = "lazy",
    srcs = ["ex1.claro_module_api"],
    outs = ["lazy.claro_module_api"],
    cmd = "sed 's/static/lazy static/' $(location ex1.claro_module_api) > $(OUTS)",
)

genrule(
    name = "ex1_with_log",
    outs = ["ex1-with-log.claro_module_api"],
    srcs = ["ex1.claro_module_api", "ex1-log.claro_module_api"],
    cmd = "cat $(location ex1.claro_module_api) > $(OUTS) && cat $(location ex1-log.claro_module_api) >> $(OUTS)",
)

genrule(
    name = "ex1_lazy_with_log",
    outs = ["ex1-lazy-with-log.claro_module_api"],
    srcs = ["lazy.claro_module_api", "ex1-log.claro_module_api"],
    cmd = "cat $(location lazy.claro_module_api) > $(OUTS) && cat $(location ex1-log.claro_module_api) >> $(OUTS)",
)

claro_module(
    name = "server_config_with_print",
    module_api_file = "ex1-with-log.claro_module_api",
    # Generated by docs_with_validated_examples() above.
    srcs = [":static_values_EX5_main.claro"],
    resources = {"ConfigJSON": "ex-server-config.json"},
)

claro_module(
    name = "server_lazy_config_with_print",
    module_api_file = "ex1-lazy-with-log.claro_module_api",
    # Generated by docs_with_validated_examples() above.
    srcs = [":static_values_EX5_main.claro"],
    resources = {"ConfigJSON": "ex-server-config.json"},
)

genrule(
    name = "impl-with-print",
    outs = ["ex1-impl-with-print.claro"],
    srcs = ["ex1-impl.claro", "ex1-log-impl.claro"],
    cmd = "sed 's/^  /$$$$  /' $(location ex1-impl.claro) | sed 's/^$$$$  resources/  log(\"STATIC VALUE INITIALIZATION\");\\n  # ...\\n$$$$  resources/' > $(OUTS) && cat $(location ex1-log-impl.claro) >> $(OUTS)",
)

genrule(
    name = "test-with-print",
    outs = ["ex1-test-with-print.claro"],
    srcs = ["ex1-test.claro"],
    cmd = "echo -e 'Config::log(\"START MAIN FILE\");\n' > $(OUTS) && cat $(location ex1-test.claro) >> $(OUTS)",
)
