
function registerDepModuleSubprocessPort(uniqueModuleName: string, port: string) -> string {
  var res: string;

  $$BEGIN_JAVA
  com.claro.compiler_backends.java_source.monomorphization.ipc_coordinator.SubprocessRegistration.registerPort(uniqueModuleName, port);
  res = "true";
  $$END_JAVA

  return res;
}

# Returns a future that's intentionally not going to be resolved until the dep module subprocess is *no longer needed*.
# This way, the endpoint will not release the connection w/ the subprocess, and thereby this can be the subprocess's
# "keepalive" mechanism preventing it from exiting.
function markDepModuleSubprocessReady(uniqueModuleName: string) -> future<string> {
  var res: future<string>;

  $$BEGIN_JAVA
  res = com.claro.compiler_backends.java_source.monomorphization.ipc_coordinator.SubprocessRegistration.markDepModuleSubprocessReady(uniqueModuleName);
  $$END_JAVA

  return res;
}