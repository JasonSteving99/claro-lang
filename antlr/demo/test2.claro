function ignore(i: int) -> string {
  return "{i}";
}

graph function foo(argA: A) -> future<FooRes> {
    root fooRes <- doFoo(@fooA, @fooB);
    node fooA <- doFooA(@fooC);
    node fooB <- bar(10, @fooC); # <-- Graph Composition via Call to `bar`.
    node fooC <- doFooC(argA);
}

function ignore(i: int) -> string {
  return "{i}";
}

graph function bar(argB: int, argC: C) -> future<BarRes> {
    root barRes <- doBar(@barA);
    node barA <- doBarA(@barB, @barC);
    node barB <- doBarB(argB);
    node barC <- doBarC(argC);
}
